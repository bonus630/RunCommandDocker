<UserControl x:Class="RunCommandDocker.MyPopup.PopupContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RunCommandDocker"
              xmlns:converters="clr-namespace:RunCommandDocker.Converters" d:DataContext="{d:DesignInstance Type=local:ProjectsManager}"
             mc:Ignorable="d" 
             >
    <UserControl.Resources>
        
        <ResourceDictionary>
            <converters:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
            <converters:TypeToVisibilityConverter x:Key="TypeToVisibilityConverter" />
            <converters:ReverseBoolVisibilityConverter x:Key="ReverseBoolVisibilityConverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <!--<ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/Colors.xaml"/>
                <ResourceDictionary Source="../Styles/Styles.xaml"/>
                <ResourceDictionary Source="../Resources/Images.xaml"/>
            </ResourceDictionary.MergedDictionaries>-->
      
        </ResourceDictionary>
    </UserControl.Resources>

    <Border Style="{DynamicResource PopupBorder}"  Margin="0,40" >
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="24"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Label HorizontalContentAlignment="Center" VerticalAlignment="Top" Foreground="{DynamicResource Default.Static.Foreground}"  
                   Background="{DynamicResource Footer.Static.Background}"
                   Content="{Binding SelectedCommand.ReflectedProp.Name,FallbackValue=VAlor}"/>
            <TreeView BorderThickness="0"  Grid.Row="1" ItemsSource="{Binding SelectedCommand.ReflectedProp.Childrens}"
                      TreeViewItem.Expanded="TreeView_Expanded">
                
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsSelected" Value="{Binding IsExpanded}" />
                        <Style.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter Property="Background" Value="Gray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate ItemsSource="{Binding Childrens}" DataType="{x:Type local:Reflected}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button Style="{DynamicResource NoBorderButton}" Grid.Column="0" Width="16" Height="16" 
                                    CommandParameter="{Binding}"  
                                    Visibility="{Binding IsValueType,Converter={StaticResource BoolToVisibilityConverter}}"
                                    Command="{Binding Path=DataContext.CopyValueCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Popup}}">
                                <Button.ToolTip>
                                    <Label Content="Copy Value" />
                                </Button.ToolTip>
                                <Image Style="{DynamicResource CopyImage}" />
                            </Button>
                            <Grid  Grid.Column="0" Background="{DynamicResource Default.Static.Background}" Width="16" Height="16"   Visibility="{Binding Error,Converter={StaticResource BoolToVisibilityConverter}}">
                                <Image Style="{DynamicResource FailsImage}">
                                    <Image.ToolTip>
                                        <StackPanel>
                                            <Label Content="Exception" FontWeight="Bold"/>
                                            <Label Content="Property throw an Exception" />
                                        </StackPanel>
                                    </Image.ToolTip>
                                </Image>
                            </Grid>
                            <Label Grid.Column="1" Content="{Binding Name}"/>
                            <Label Grid.Column="2" Content="{Binding Value}"/>
                        </Grid>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
        </Grid>
    </Border>
</UserControl>
