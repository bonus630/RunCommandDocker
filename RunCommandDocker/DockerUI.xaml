<UserControl x:Class="RunCommandDocker.DockerUI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:RunCommandDocker" 
             xmlns:popup="clr-namespace:RunCommandDocker.MyPopup" 
             d:DataContext="{d:DesignInstance Type=local:ProjectsManager}"
             xmlns:converters="clr-namespace:RunCommandDocker.Converters"
             mc:Ignorable="d" 
             MinWidth="225" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource ScrollBar.Static.Border}" BorderThickness="0" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ScrollBar.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ScrollBar.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ScrollBar.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ScrollBar.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource ScrollBar.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ScrollBar.Disabled.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle  RadiusX="4" RadiusY="4" x:Name="rectangle" Margin="2" Fill="{DynamicResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource ScrollBar.MouseOver.Thumb}"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource ScrollBar.Pressed.Thumb}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Rectangle RadiusX="4" RadiusY="4" x:Name="rectangle" Margin="2" Fill="{DynamicResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource ScrollBar.MouseOver.Thumb}"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource ScrollBar.Pressed.Thumb}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="Background" Value="{DynamicResource ScrollBar.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ScrollBar.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Width" Value="12"/>
                <Setter Property="MinWidth" Value="10"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                    <RowDefinition Height="0.00001*"/>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                </Grid.RowDefinitions>
                                <Border CornerRadius="6" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Row="1"/>
                                <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowTop" Data="M0,4 C0,4 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{DynamicResource ScrollBar.Static.Glyph}" Stretch="Uniform" Height="12" Width="12" Margin="-4"/>
                                </RepeatButton>
                                <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowBottom" Data="M0,2.5 C0,2.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{DynamicResource ScrollBar.Static.Glyph}" Stretch="Uniform" Height="12" Width="12" Margin="-4"/>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="{DynamicResource ScrollBar.MouseOver.Glyph}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowTop" Value="{DynamicResource ScrollBar.MouseOver.Glyph}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="{DynamicResource ScrollBar.MouseOver.Glyph}"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowTop" Value="{DynamicResource ScrollBar.MouseOver.Glyph}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="ArrowTop" Value="{DynamicResource ScrollBar.Disabled.Glyph}"/>
                                    <Setter Property="Fill" TargetName="ArrowBottom" Value="{DynamicResource ScrollBar.Disabled.Glyph}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="MinWidth" Value="0"/>
                        <Setter Property="Height" Value="12"/>
                        <Setter Property="MinHeight" Value="10"/>
                        <Setter Property="BorderThickness" Value="0"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            <ColumnDefinition Width="0.00001*"/>
                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        </Grid.ColumnDefinitions>
                                        <Border CornerRadius="6" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1"/>
                                        <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                            <Path x:Name="ArrowLeft" Data="M3.18,7 C3.18,7 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{DynamicResource ScrollBar.Static.Glyph}" Stretch="Uniform" Height="12" Width="12" Margin="-4"/>
                                        </RepeatButton>
                                        <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{DynamicResource RepeatButtonTransparent}"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{DynamicResource RepeatButtonTransparent}"/>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton x:Name="PART_LineRightButton" Command="{x:Static ScrollBar.LineRightCommand}" Grid.Column="2" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                            <Path x:Name="ArrowRight" Data="M1.81,7 C1.81,7 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{DynamicResource ScrollBar.Static.Glyph}" Stretch="Uniform" Height="12" Width="12" Margin="-4"/>
                                        </RepeatButton>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowRight" Value="{DynamicResource ScrollBar.Pressed.Glyph}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowLeft" Value="{DynamicResource ScrollBar.Pressed.Glyph}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowRight" Value="{DynamicResource ScrollBar.MouseOver.Glyph}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Fill" TargetName="ArrowLeft" Value="{DynamicResource ScrollBar.MouseOver.Glyph}"/>
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Fill" TargetName="ArrowLeft" Value="{DynamicResource ScrollBar.Disabled.Glyph}"/>
                                            <Setter Property="Fill" TargetName="ArrowRight" Value="{DynamicResource ScrollBar.Disabled.Glyph}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ScrollViewer}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Ellipse x:Name="Corner" Grid.Column="1" Fill="{DynamicResource ScrollBar.Static.Background}" Grid.Row="1"/>
                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanHorizontallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" CanVerticallyScroll="False" Grid.Column="0" Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <converters:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <converters:TypeToVisibilityConverter x:Key="TypeToVisibilityConverter" />
            <converters:ReverseBoolVisibilityConverter x:Key="ReverseBoolVisibilityConverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/Colors.xaml"/>
                <ResourceDictionary Source="Styles/Styles.xaml"/>
                <ResourceDictionary Source="Resources/Images.xaml"/>
            </ResourceDictionary.MergedDictionaries>


        </ResourceDictionary>

    </UserControl.Resources>
    <DockPanel LastChildFill="true">
        <Grid Height="26" DockPanel.Dock="Top" HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="5" Style="{DynamicResource NoBorderButton}" Width="22" Height="22" Name="btn_selectFolder" Click="btn_selectFolder_Click">
                <Button.ToolTip>
                    <Label Content="Select a folder to monitor"/>
                </Button.ToolTip>
                <Image Style="{DynamicResource FolderBrowserDialogControlImage}" />
            </Button>
            <Button Grid.Column="4" Style="{DynamicResource NoBorderButton}" Width="22" Height="22" Name="btn_openFolder" Click="btn_openFolder_Click" >
                <Button.ToolTip>
                    <StackPanel>
                        <Label Content="Open Folder"/>
                        <Label Content="{Binding Dir}" FontWeight="Bold" />
                    </StackPanel>
                </Button.ToolTip>
                <Image Style="{DynamicResource FolderOpenedImage}" />
            </Button>
        </Grid>
        <Separator DockPanel.Dock="Top" />
        <Grid DockPanel.Dock="Top">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Border BorderThickness="1" Grid.Row="0" Visibility="{Binding SelectedCommand,Converter={StaticResource NullToVisibilityConverter}}" >
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="0,10">
                    <!--<ListView ItemsSource="{Binding SelectedCommands}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>-->
                    <Expander  IsExpanded="true" x:Name="expander_Attributes"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                        <Expander.Header>
                            <StackPanel HorizontalAlignment="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}, Mode=OneWayToSource}" >
                                <StackPanel Orientation="Horizontal">
                                    <Button Style="{StaticResource NoBorderButton}" Width="16" Height="16"  HorizontalAlignment="Left"  
                        CommandParameter="{Binding SelectedCommand}" Command="{Binding Path=ExecuteCommand}">
                                        <Button.ToolTip>
                                            <StackPanel Orientation="Horizontal">
                                                <Label>Run</Label>
                                                <Label Content="{Binding SelectedCommand.Name}"/>
                                            </StackPanel>
                                        </Button.ToolTip>
                                        <Image Style="{DynamicResource PlayImage}" />
                                    </Button>
                                    <Button Style="{StaticResource NoBorderButton}" Width="16" Height="16"  HorizontalAlignment="Left"  
                        CommandParameter="{Binding SelectedCommand}" Command="{Binding Path=StopCommand}"
                                        Visibility="{Binding SelectedCommand.CanStop,Converter={StaticResource BoolToVisibilityConverter}}">
                                        <Button.ToolTip>
                                            <StackPanel Orientation="Horizontal">
                                                <Label>Run</Label>
                                                <Label Content="{Binding SelectedCommand.Name}"/>
                                            </StackPanel>
                                        </Button.ToolTip>
                                        <Image Style="{DynamicResource StopImage}" />
                                    </Button>
                                    <Label Content="{Binding SelectedCommand.Name}" />
                                </StackPanel>
                                <ProgressBar Height="2" IsIndeterminate="True"  Visibility="{Binding SelectedCommand.CanStop,Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </StackPanel>
                        </Expander.Header>
                        <StackPanel Margin="0">
                            <GroupBox Header="Return" Margin="0,0,0,10" Visibility="{Binding SelectedCommand.ReturnsType,ConverterParameter={x:Type System:Void},Converter={StaticResource TypeToVisibilityConverter}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10" />
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="*" MinWidth="130"/>

                                    </Grid.ColumnDefinitions>
                                    <!--<Label Content="Return:" FontWeight="Bold"/>-->

                                    <Label Grid.Row="0" Grid.Column="2" Content="Type:" />
                                    <Label Grid.Row="0" Grid.Column="3"  Content="{Binding SelectedCommand.ReturnsType.Name}" ToolTip="{Binding SelectedCommand.ReturnsType.FullName}"/>
                                    <Button   Grid.Row="1" Grid.Column="1" Style="{DynamicResource NoBorderButton}" Width="16" Height="16" 
                                    CommandParameter="{Binding SelectedCommand.Returns}"  
                                    Visibility="{Binding SelectedCommand.ReflectedProp.IsValueType,Converter={StaticResource ReverseBoolVisibilityConverter}}"
                                    Command="{Binding Path=CopyReturnsValueCommand}">
                                        <Button.ToolTip>
                                            <Label Content="Copy Value" />
                                        </Button.ToolTip>
                                        <Image Style="{DynamicResource CopyImage}" />
                                    </Button>
                                    <Label Grid.Row="1" Grid.Column="2"  Content="Value:" />

                                    <Grid  Grid.Row="1" Grid.Column="3" Background="Transparent" MouseEnter="Label_MouseEnter" >
                                        <Label Content="{Binding SelectedCommand.Returns}"  x:Name="lba_returns" Margin="2"/>
                                    </Grid>

                                    <popup:MyPopup ToReflect="{Binding SelectedCommand.Returns}" PlacementTarget="{Binding ElementName=lba_returns}" Placement="Right" AllowsTransparency="True"
                                                       IsOpen="{Binding Path=MyPopupIsOpen}" 
                                                           PopupCloseEvent="MyPopup_PopupCloseEvent"/>

                                </Grid>
                            </GroupBox>
                            <GroupBox Header="Params" Visibility="{Binding SelectedCommand.Count,Converter={StaticResource IntToVisibilityConverter},FallbackValue=0}" Margin="0,10">
                                <!--<Label Content="Params:" FontWeight="Bold"/>-->

                                <ListView ItemsSource="{Binding SelectedCommand.Items}" SelectionMode="Single">
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="Background" Value="{DynamicResource Default.Static.Background}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Red" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <!--<RowDefinition />-->
                                                </Grid.RowDefinitions>
                                                <!--<Label Grid.Row="0" Grid.Column="0" Content="Name:" />-->
                                                <Label Grid.Row="0" Grid.Column="0" Content="{Binding Name}" />
                                                <!--<Label Grid.Row="1" Grid.Column="0" Content="Type:" />-->
                                                <Label Grid.Row="0" Grid.Column="1" Content="{Binding ArgumentType.Name}" ToolTip="{Binding ArgumentType.FullName}"/>
                                                <Label Grid.Row="1" Grid.Column="0" Content="Value:" />
                                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Value}" VerticalContentAlignment="Center" Width="144"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>

                            </GroupBox>
                        </StackPanel>
                    </Expander>
                    <!--</DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>-->
                </ScrollViewer>
            </Border>
            <GroupBox Grid.Row="1" Header="Shape Range Manager" Margin="0,10">
                <Grid Height="26">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"  Style="{DynamicResource NoBorderButton}"  Width="22" Height="22"   Name="btn_addSelection" Click="btn_addSelection_Click" >
                        <Button.ToolTip>
                            <Label Content="Add Selection to ShapeRange Reference"/>
                        </Button.ToolTip>
                        <Image Style="{DynamicResource AddShapeRangeImage}" />
                    </Button>
                    <Button Grid.Column="1"  Style="{DynamicResource NoBorderButton}" Width="22" Height="22"  Name="btn_removeSelection"  Click="btn_removeSelection_Click">
                        <Button.ToolTip>
                            <Label Content="Remove Selection from ShapeRange Reference"/>
                        </Button.ToolTip>
                        <Image Style="{DynamicResource RemoveShapeRangeImage}" />
                    </Button>
                    <Button Grid.Column="2"  Style="{DynamicResource NoBorderButton}" Width="22" Height="22"  Name="btn_clearRange" Click="btn_clearRange_Click">
                        <Button.ToolTip>
                            <Label Content="Clean ShapeRange Reference"/>
                        </Button.ToolTip>
                        <Image Style="{DynamicResource CleanDataShapeRangeImage}" />
                    </Button>
                    <Button Grid.Column="5"  Style="{DynamicResource NoBorderButton}" Width="22" Height="22" Command="{Binding Path=SetShapeRangeToValueCommand}">
                        <Button.ToolTip>
                            <Label Content="Set ShapeRange Reference to this param"/>
                        </Button.ToolTip>
                        <Image Style="{DynamicResource CheckmarkShapeRangeImage}" />
                    </Button>
                    <Border Grid.Column="6" BorderBrush="#861b2d" BorderThickness="2" CornerRadius="6">
                        <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding shapeRangeManager.Count}" />
                    </Border>
                </Grid>
            </GroupBox>
        </Grid>
        <ItemsControl DockPanel.Dock="Bottom"  HorizontalAlignment="Stretch" Margin="0,10,0,0" ItemsSource="{Binding PinnedCommands}" Background="#861b2d">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button  Style="{StaticResource NoBorderButton}"  CommandParameter="{Binding}" 
                             Command="{Binding Path=DataContext.ExecuteCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl}}">
                        <Button.ToolTip>
                            <StackPanel Orientation="Horizontal">
                                <Label>Run</Label>
                                <Label Content="{Binding Name}"/>
                            </StackPanel>
                        </Button.ToolTip>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Unpin" CommandParameter="{Binding}" 
                                          Command="{Binding Path=PlacementTarget.DataContext.Parent.Parent.Parent.TogglePinCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl}}">
                                    <MenuItem.Icon>
                                        <Image Style="{DynamicResource PinImage}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                        <StackPanel Orientation="Horizontal">
                            <Image Width="16" Height="16" Style="{DynamicResource PlayImage}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <Label Content="{Binding Name}" FontSize="9" FontWeight="Bold" VerticalAlignment="Center" VerticalContentAlignment="Center" Foreground="White" />
                        </StackPanel>

                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        <TreeView DockPanel.Dock="Bottom" ItemsSource="{Binding Projects}" Name="treeViewCommands"
                  VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" TreeViewItem.Selected="TreeView_Selected">
            <!-- //Ref.:01 
            // Compare to another Ref.:01
             TreeViewItem.Selected="TreeView_Selected">-->

            <TreeView.Resources>

                <HierarchicalDataTemplate  ItemsSource="{Binding Path=Items}" DataType="{x:Type local:Project}">
                    <Grid>
                        <Label Content="{Binding Path=Name}" Focusable="False" />
                    </Grid>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate  ItemsSource="{Binding Path=Items}" DataType="{x:Type local:Module}" >
                    <Grid>
                        <Label Content="{Binding Path=Name}" Focusable="False"/>
                    </Grid>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type local:Command}">
                    <!--<DataTemplate.Triggers >
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="treeViewItemRun" Property="b"
                        </DataTrigger>
                    </DataTemplate.Triggers>-->

                    <Grid Height="28" x:Name="treeViewItemRun">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Pin" CommandParameter="{Binding}"
                                          Command="{Binding Path=PlacementTarget.DataContext.Parent.Parent.Parent.TogglePinCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                         Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <MenuItem.Icon>
                                        <Image Style="{DynamicResource PinImage}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Button Grid.Column="0" Style="{StaticResource NoBorderButton}" Width="16" Height="16"  
                                Visibility="{Binding Path=HasParam,  Converter={StaticResource ReverseBoolVisibilityConverter}}"
                        CommandParameter="{Binding}" Command="{Binding Path=DataContext.ExecuteCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}">
                            <Button.ToolTip>
                                <StackPanel Orientation="Horizontal">
                                    <Label>Run</Label>
                                    <Label Content="{Binding Name}"/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Style="{DynamicResource PlayImage}" />
                        </Button>
                        <!--Visibility="{Binding Path=HasParam,  Converter={StaticResource ReverseBoolVisibilityConverter}}"-->
                        <Button Grid.Column="1"  Width="16" Height="16" Style="{DynamicResource NoBorderButton}"
                                Visibility="{Binding ReturnsType,ConverterParameter={x:Type System:Void},Converter={StaticResource TypeToVisibilityConverter}}"
                                CommandParameter="{Binding}" 
                                Command="{Binding Path=DataContext.SetCommandToValueCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}">
                            <Button.ToolTip>
                                <Label Content="Set returns value to selected argument"/>
                            </Button.ToolTip>

                            <Image Style="{DynamicResource CheckmarkShapeRangeImage}" />

                        </Button>
                        <Label Grid.Column="2" VerticalAlignment="Center" Content="{Binding Name}" />
                    </Grid>

                </DataTemplate>
            </TreeView.Resources>
        </TreeView>
    </DockPanel>
</UserControl>
