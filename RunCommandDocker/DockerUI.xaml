<UserControl x:Class="RunCommandDocker.DockerUI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:RunCommandDocker" 
             xmlns:popup="clr-namespace:RunCommandDocker.MyPopup" 
             d:DataContext="{d:DesignInstance Type=local:ProjectsManager}"
             xmlns:converters="clr-namespace:RunCommandDocker.Converters"
             mc:Ignorable="d" 
             MinWidth="225" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
            <converters:TypeToVisibilityConverter x:Key="TypeToVisibilityConverter" />
            <converters:ReverseBoolVisibilityConverter x:Key="ReverseBoolVisibilityConverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/Colors.xaml"/>
                <ResourceDictionary Source="Styles/Styles.xaml"/>
                <ResourceDictionary Source="Resources/Images.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>
    <DockPanel LastChildFill="true">

        <Grid Height="26" DockPanel.Dock="Top" HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
                <ColumnDefinition Width="26"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="5"  Width="22" Height="22"  HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0" Background="{x:Null}" Name="btn_selectFolder" Click="btn_selectFolder_Click">
                <Button.ToolTip>
                    <Label Content="Select a folder to monitor"/>
                </Button.ToolTip>
                <Image Style="{DynamicResource FolderBrowserDialogControlImage}" />
            </Button>
            <Button Grid.Column="4"  Width="22" Height="22"  HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0" Background="{x:Null}"  Name="btn_openFolder" Click="btn_openFolder_Click" >
                <Button.ToolTip>
                    <StackPanel>
                        <Label Content="Open Folder"/>
                        <Label Content="{Binding Dir}" FontWeight="Bold" />
                    </StackPanel>
                </Button.ToolTip>
                <Image Style="{DynamicResource FolderOpenedImage}" />
            </Button>
        </Grid>
        <Grid DockPanel.Dock="Top">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ScrollViewer Grid.Row="0" >
                <ListView ItemsSource="{Binding SelectedCommands}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Expander  IsExpanded="true" x:Name="expander_Attributes"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                <Expander.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <Button Style="{StaticResource controlUI.Button}" Width="16" Height="16"  HorizontalAlignment="Left" BorderThickness="0" Background="{x:Null}"  
                        CommandParameter="{Binding}" Command="{Binding Path=DataContext.ExecuteCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}">
                                            <Button.ToolTip>
                                                <StackPanel Orientation="Horizontal">
                                                    <Label>Run</Label>
                                                    <Label Content="{Binding Name}"/>
                                                </StackPanel>
                                            </Button.ToolTip>
                                        </Button>
                                        <Label Content="{Binding Name}" />
                                    </StackPanel>
                                </Expander.Header>
                                <StackPanel>
                                    <StackPanel Visibility="{Binding ReturnsType,ConverterParameter={x:Type System:Void},Converter={StaticResource TypeToVisibilityConverter}}">
                                        <Label Content="Return:" FontWeight="Bold"/>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Type:" />
                                            <Label Content="{Binding ReturnsType.Name}" ToolTip="{Binding ReturnsType.FullName}"/>

                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Value:" />
                                            <Label Content="{Binding Returns}" MouseEnter="Label_MouseEnter" x:Name="lba_returns"/>
                                            <popup:MyPopup ToReflect="{Binding Returns}" PlacementTarget="{Binding ElementName=lba_returns}" Placement="Right" AllowsTransparency="True"
                                                       IsOpen="{Binding Path=DataContext.MyPopupIsOpen, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                                           PopupCloseEvent="MyPopup_PopupCloseEvent"/>

                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Visibility="{Binding Count,Converter={StaticResource IntToVisibilityConverter},FallbackValue=0}" >
                                        <Label Content="Params:" FontWeight="Bold"/>

                                        <ListView ItemsSource="{Binding Items}" SelectionMode="Single">
                                            <ListView.ItemContainerStyle>
                                                <Style TargetType="ListViewItem">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="Transparent" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                                </Style>
                                            </ListView.ItemContainerStyle>
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition />
                                                            <!--<RowDefinition />-->
                                                        </Grid.RowDefinitions>
                                                        <!--<Label Grid.Row="0" Grid.Column="0" Content="Name:" />-->
                                                        <Label Grid.Row="0" Grid.Column="0" Content="{Binding Name}" />
                                                        <!--<Label Grid.Row="1" Grid.Column="0" Content="Type:" />-->
                                                        <Label Grid.Row="0" Grid.Column="1" Content="{Binding ArgumentType.Name}" ToolTip="{Binding ArgumentType.FullName}"/>
                                                        <Label Grid.Row="1" Grid.Column="0" Content="Value:" />
                                                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Value}" Width="60"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>

                                    </StackPanel>
                                </StackPanel>
                            </Expander>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </ScrollViewer>
            <GroupBox Grid.Row="1" Header="Shape Range Manager" Margin="0,10">
                <Grid Height="26">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition Width="26"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0"  Width="22" Height="22"  HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0" Background="{x:Null}" Name="btn_addSelection" Click="btn_addSelection_Click" >
                        <Button.ToolTip>
                            <Label Content="Add Selection to ShapeRange Reference"/>
                        </Button.ToolTip>
                        <Image Style="{DynamicResource AddShapeRangeImage}" />
                    </Button>
                    <Button Grid.Column="1"  Width="22" Height="22"  HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0" Background="{x:Null}" Name="btn_removeSelection"  Click="btn_removeSelection_Click">
                        <Button.ToolTip>
                            <Label Content="Remove Selection from ShapeRange Reference"/>
                        </Button.ToolTip>
                        <Image Style="{DynamicResource RemoveShapeRangeImage}" />
                    </Button>
                    <Button Grid.Column="2"  Width="22" Height="22"  HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0" Background="{x:Null}" Name="btn_clearRange" Click="btn_clearRange_Click">
                        <Button.ToolTip>
                            <Label Content="Clean ShapeRange Reference"/>
                        </Button.ToolTip>
                        <Image Style="{DynamicResource CleanDataShapeRangeImage}" />
                    </Button>
                    <Button Grid.Column="5" Width="22" Height="22"  HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0" Background="{x:Null}"
                                                             Command="{Binding Path=SetShapeRangeToValueCommand}">
                        <Button.ToolTip>
                            <Label Content="Set ShapeRange Reference to this param"/>
                        </Button.ToolTip>
                        <Image Style="{DynamicResource CheckmarkShapeRangeImage}" />
                    </Button>
                    <Border Grid.Column="6" BorderBrush="Red" BorderThickness="2" CornerRadius="6">
                        <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding shapeRangeManager.Count}" />
                    </Border>
                </Grid>
            </GroupBox>
        </Grid>
        <TreeView DockPanel.Dock="Bottom" ItemsSource="{Binding Projects}" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="TreeViewItem.IsExpanded" Value="{Binding IsExpanded}"/>
                    <Setter Property="TreeViewItem.IsSelected" Value="{Binding IsSelected}"/>

                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.Resources>

                <HierarchicalDataTemplate  ItemsSource="{Binding Path=Items}" DataType="{x:Type local:Project}">
                    <HeaderedContentControl Header="{Binding Path=Name}" Focusable="False"/>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate  ItemsSource="{Binding Path=Items}" DataType="{x:Type local:Module}" >
                    <HeaderedContentControl Header="{Binding Path=Name}" Focusable="False"/>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type local:Command}">

                    <Grid Height="28">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Style="{StaticResource controlUI.Button}" Width="16" Height="16"  HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0" Background="{x:Null}"
                                Visibility="{Binding Path=HasParam,  Converter={StaticResource ReverseBoolVisibilityConverter}}"
                        CommandParameter="{Binding}" Command="{Binding Path=DataContext.ExecuteCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}">
                            <Button.ToolTip>
                                <StackPanel Orientation="Horizontal">
                                    <Label>Run</Label>
                                    <Label Content="{Binding Name}"/>
                                </StackPanel>
                            </Button.ToolTip>
                        </Button>
                        <!--Visibility="{Binding Path=HasParam,  Converter={StaticResource ReverseBoolVisibilityConverter}}"-->
                        <Button Grid.Column="1"  Width="16" Height="16"  HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="0" Background="{x:Null}"
                                
                        CommandParameter="{Binding}" Command="{Binding Path=DataContext.SetCommandToValueCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}">
                            <Button.ToolTip>
                                <Label Content="Set returns value to selected argument"/>
                            </Button.ToolTip>
                            <Image Style="{DynamicResource CheckmarkShapeRangeImage}" />

                        </Button>
                        <Label Grid.Column="2" VerticalAlignment="Center" Content="{Binding Name}" />
                    </Grid>

                </DataTemplate>
            </TreeView.Resources>
        </TreeView>
    </DockPanel>
</UserControl>
